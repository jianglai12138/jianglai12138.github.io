<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome to my blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-02-25T03:52:21.288Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>不秃头战士</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>c语言概况</title>
    <link href="http://example.com/2023/02/25/c%E8%AF%AD%E8%A8%80%E6%A6%82%E5%86%B5/"/>
    <id>http://example.com/2023/02/25/c%E8%AF%AD%E8%A8%80%E6%A6%82%E5%86%B5/</id>
    <published>2023-02-24T16:28:21.000Z</published>
    <updated>2023-02-25T03:52:21.288Z</updated>
    
    <content type="html"><![CDATA[<p>1.（1）自增运算符和自减运算符：  ++  - -<br>在变量前后有区别，例如<br>i &#x3D; 100;<br>op1 &#x3D; i++;  &#x2F;&#x2F; op1 &#x3D; 100，先 op1 &#x3D; i，然后 i &#x3D; i + 1<br>i &#x3D; 100;<br>op2 &#x3D; ++i;  &#x2F;&#x2F; op2 &#x3D; 101，先 i &#x3D; i + 1，然后赋值 op2<br>i &#x3D; 100;<br>op3 &#x3D; i- -;  &#x2F;&#x2F; op3 &#x3D; 100，先赋值 op3，然后 i &#x3D; i - 1<br>i &#x3D; 100;<br>op4 &#x3D; - -i;  &#x2F;&#x2F; op4 &#x3D; 99，先 i &#x3D; i - 1，然后赋值 op4<br>（2）条件运算符： ？<br>a？b：c  表示如果a成立，结果为b，否则为c。可以看作if-else理解<br>int  a,b &#x3D; 1,c &#x3D; 2;<br>if(a)<br>b &#x3D; 1;<br>else<br>c &#x3D; 2;</p><p>2.流程控制语句-分支<br>（1）if-else<br>（2）switch<br>switch(选择句){       &#x2F;&#x2F;选择句，标签都使用整型数据（可以为字母）<br>caes 标签1 : {语句1}  &#x2F;&#x2F;使用break；停止，否则一直运行下去。<br>case 标签2 : {语句2}<br>default : {语句3}<br>}<br>7.流程控制语句-循环<br>（1）for循环<br>for(初始值;循环条件;循环方式){<br>循环体;<br>}<br>（2）while循环<br>while（循环条件）{<br>循环体；<br>}<br>（3）do-while循环    &#x2F;&#x2F;与while循环相比先执行一次再判断循环条件<br>do{<br>循环体；<br>}while（循环条件）；</p><p>3.数组<br>（1）数组大小固定，不能随意改变。<br>（2）a[b],数组中的元素数量b一定是已知的常量。数组从a[0]开始到a[b-1]，共b个。<br>（3）数组之间不能直接赋值。<br>（4）多维数组：实质是数组的数组，通常使用for循环处理。</p><p>4.结构体<br>可以理解为自己定义的数据类型。<br>（1）定义（可以嵌套定义）<br>struct （结构名）{<br>（类型名） （成员名1）；<br>（类型名） （成员名2）；<br>}（变量名）；</p><p>struct （结构名）{<br>（类型名） （成员名1）；<br>（类型名） （成员名2）；<br>}；<br>struct （结构名）（变量名）；&#x2F;&#x2F;两个位置的变量不可重复定义<br>（2）变量初始化（变量之间可以直接赋值或进行运算）<br>（变量名）&#x3D;{初值表列}  &#x2F;&#x2F;根据结构体的成员元素类型和个数按顺序赋值，用“，”隔开，不能在结构体内赋初值。<br>（3）引用<br>（结构变量名）.（成员名）<br>（4）结构数组，赋初值时数组的每个元素（可用大括号括起来，方便查看）的每个成员不可忽略，不可跳过。<br>三种方式的引用<br>  结构数组名[下标].成员名<br> (*(结构数组名+下标)).成员名<br> (结构数组名+下标)-&gt;成员名</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.（1）自增运算符和自减运算符：  ++  - -&lt;br&gt;在变量前后有区别，例如&lt;br&gt;i &amp;#x3D; 100;&lt;br&gt;op1 &amp;#x3D; i++;  &amp;#x2F;&amp;#x2F; op1 &amp;#x3D; 100，先 op1 &amp;#x3D; i，然后 i &amp;#x3D; i +</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>c with STL学习笔记</title>
    <link href="http://example.com/2023/02/24/c-with-STL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2023/02/24/c-with-STL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-02-24T07:11:29.000Z</published>
    <updated>2023-02-24T16:30:27.635Z</updated>
    
    <content type="html"><![CDATA[<p>1.头文件：（1）万能头文件： #include&lt;bits&#x2F;stdc++.h&gt;<br>（2）加快cpp输入输出：#define FIO ios::sync_with_stdio(0);cin.tie(0); （不要忘记在main（）函数中写下：FIO;）<br>2.使用标准库空间std： using namespace std;<br>3.不要使用endl（复杂拖延时间），改用\n：(1)头文件替换： #define endl ‘\n’<br>（2）直接输出’\n’<br>4.变量类型：布尔类型：只有1或0两个值。例如bool flag;flag只能等于1或0。</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.头文件：（1）万能头文件： #include&amp;lt;bits&amp;#x2F;stdc++.h&amp;gt;&lt;br&gt;（2）加快cpp输入输出：#define FIO ios::sync_with_stdio(0);cin.tie(0); （不要忘记在main（）函数中写下：FIO;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>c++课堂笔记</title>
    <link href="http://example.com/2023/02/22/c++%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2023/02/22/c++%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/</id>
    <published>2023-02-21T16:24:50.000Z</published>
    <updated>2023-02-23T14:40:48.744Z</updated>
    
    <content type="html"><![CDATA[<p>##第一课时<br>##第二课时</p><hr><p>##第一课时<br>1.c++语言的头文件扩展名是  .h<br>  c++语言的源程序文件的扩展名是  .cpp<br>2.c++使用cin和cout进行输入输出必须包含的头文件是  iostream<br>  c++语言程序中使用控制符setw进行格式输出时应包含的头文件是  iomanip<br>3.cin和cout为c++中预定义的对象。<br>    “&gt;&gt;”称为流插入运算符，执行输入功能。<br>    “&lt;&lt;”称为流输出运算符，执行输出功能。<br>4.const与dedine定义变量的区别：（1）const与dedine都可以在c++中定义变量。<br>（2）const要定义常量的类型，define则不需要。如：#define PI 3.1415926，const float PI&#x3D;3.1415926;<br>（3）define不分配内存，const在静态存储区中分配空间。<br>5.（1）endl相当于\n<br>（2）setw(int n)是c++中在输出操作中使用的字段宽度设置，设置输出的域宽，n表示字段宽度。只对紧接着的输出有效，紧接着的输出结束后又变回默认的域宽。<br>当后面紧跟着的输出字段长度小于n的时候，在该字段前面用空格补齐（默认为右对齐）；当输出字段长度大于n时，全部整体输出。<br>（3）setfill（‘$’）表示将代替空格填充为$。<br>（3）left左对齐，right右对齐，都对于整个语句有效。<br>（4）setprecision(int n)，表示输出浮点值n位有效数字，可以四舍五入，只对邻近的有效。<br>（5）fixed写在setprecision(int n)之前，将输出浮点值n位，改为浮点值小数点后的n位。<br>6.dec表示十进制，hex表示十六进制，oct表示八进制。</p><hr><p>##第二课时</p><p>预习<br>1.函数原型<br>在c语言中，函数定义：函数类型 函数名（形参列表）{ 函数体 }<br>函数原型：函数类型 函数名（形参列表）；其也可称为为 函数类型：函数首部；<br>函数原型的作用：可以避免函数先调用后定义的错误，即当函数原型在函数调用前时，可以先调用后定义。<br>2.函数重载<br>overload直译为重载，为了方便理解，可意译为多态，即多种形态。因此函数重载理解为同一函数多种形态。<br>函数重载条件：函数名相同，参数类型或参数个数不同。与函数类型无关，判断时忽略。<br>例如void f1(int a);与void f1(double d);是函数重载。<br>int max(int a);与int max(int a,int b);是。<br>void f2(int a);与int f2(int a);不是.<br>一般用于相同类型的运算，但具体功能有些差别的函数。<br>3.作用域运算符 ::<br>当程序中外部变量与内部变量重名时，内部变量屏蔽外部变量。<br>如果将变量x前加::,即变为::x输出时，则可输出外部变量。</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;##第一课时&lt;br&gt;##第二课时&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;##第一课时&lt;br&gt;1.c++语言的头文件扩展名是  .h&lt;br&gt;  c++语言的源程序文件的扩展名是  .cpp&lt;br&gt;2.c++使用cin和cout进行输入输出必须包含的头文件是  iostream&lt;br&gt;  c</summary>
      
    
    
    
    
  </entry>
  
</feed>
